@using IECHClinic.DataAccess
@model IECHClinic.Models.UsuarioVM

<div class="card-body">
    @Html.HiddenFor(x => Model.Estado)

    @Html.HiddenFor(x => Model.intUsuario)
    <div class="form-group row">
        <div class="col-lg-4">
            @Html.LabelFor(y => y.intUsuario, new { @class = "label-form" })
            <div class="input-group">
                @Html.TextBoxFor(y => y.intUsuario, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="col-lg-4">
            @Html.LabelFor(x => x.strUsuario, new { @class = "label-form" })
            <div class="input-group">
                @Html.TextBoxFor(x => x.strUsuario, new { @class = "form-control", @readonly = "readonly" })
            </div>
            @Html.ValidationMessageFor(x => x.strUsuario, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-4">
            @Html.LabelFor(x => x.strContrasena, new { @class = "label-form" })
            <div class="input-group">
                @Html.TextBoxFor(x => x.strContrasena, new { @class = "form-control", @type = "Password" })
            </div>
            @Html.ValidationMessageFor(x => x.strContrasena, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-4">
            @Html.LabelFor(x => x.strNombre_Usuario, new { @class = "label-form" })
            <div class="input-group">
                @Html.TextBoxFor(x => x.strNombre_Usuario, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(x => x.strNombre_Usuario, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-4">
            @Html.LabelFor(x => x.strApPaterno_Usuario, new { @class = "label-form" })
            <div class="input-group">
                @Html.TextBoxFor(x => x.strApPaterno_Usuario, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(x => x.strApPaterno_Usuario, "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-4">
            @Html.LabelFor(x => x.strApMaterno_Usuario, new { @class = "label-form" })
            <div class="input-group">
                @Html.TextBoxFor(x => x.strApMaterno_Usuario, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(x => x.strApMaterno_Usuario, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-4">
            &nbsp;
        </div>
        <div class="col-lg-4">
            @Html.LabelFor(x => x.intRol, new { @class = "label-form" })
            <select data-plugin-selectTwo data-minimum-results-for-search="Infinity"
                    class="form-control populate mb-3"
                    name="@Html.NameFor(x => x.Perfil.PerfilID)"
                    id="cboRol_E">

                @if (Model.Perfil.PerfilID != null)
                {
                    <option value="@Model.Perfil.PerfilID">@Model.Perfil.NombrePerfil</option>
                }
                else
                {
                    <option value="">Seleccione...</option>
                }
                @foreach (IECHClinic.Models.Perfil perfil in Model.lPerfil)
                {
                    <option value="@perfil.PerfilID">
                        @perfil.NombrePerfil
                    </option>
                }
            </select>
            <select style="display:none;" disabled data-plugin-selectTwo data-minimum-results-for-search="Infinity"
                    class="form-control populate mb-3"
                    name="@Html.NameFor(x => x.Perfil.PerfilID)"
                    id="cboRol_EDisable">

                @if (Model.Perfil.PerfilID != null)
                {
                    <option value="@Model.Perfil.PerfilID">@Model.Perfil.NombrePerfil</option>
                }
                else
                {
                    <option value="">Seleccione...</option>
                }
                @foreach (IECHClinic.Models.Perfil perfil in Model.lPerfil)
                {
                    <option value="@perfil.PerfilID">
                        @perfil.NombrePerfil
                    </option>
                }
            </select>
        </div>
        <div class="col-lg-4">
            @Html.LabelFor(x => x.Estado, new { @class = "label-form" })
            <div class="input-group">
                <span class="input-group-prepend">
                    <span class="input-group-text">
                        <i>
                            <input type="radio" value="0" name="radioActivoE" id="radioActivoE"
                                   onclick="radioActivoE()">
                        </i>
                    </span>
                </span>
                <input value="Activo" class="form-control" type="text" readonly>
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-12">
            <div class="btn btn-dark float-right" id="GuardaEditUsuario-btn">
                Actualizar
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-12">
            <div class="btn btn-warning float-right text-bold text-gray-darker" id="agregaPermisos-btn">
                Editar Permisos ESPECIALES para este Usuario
            </div>
        </div>
    </div>
    <div id="rowLimpiarPermisos" style="display:none" class="form-group row">
        <div class="col-lg-12">
            <div class="btn btn-danger float-right text-bold" id="LimpiarPermisos-btn">
                Deshacer Permisos Especiales
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        var estado = $(@Html.IdFor(y => Model.Estado)).val();

        if (estado == 'False') { $("#radioActivoE").prop('checked', false); $("#radioActivoE").prop('value', 0); } else { $("#radioActivoE").attr('checked', true); $("#radioActivoE").prop('value', 1); }


    });
</script>



